worker_processes 1;

events {
    worker_connections 1024;
}

http {
    resolver 8.8.8.8;

    server {
        listen 80;

        # Only allow access to this specific API path
        location = /api/v1/validate {
            proxy_pass https://actualfastapi-app.liara.run/api/v1/validate$is_args$args;

            # Set the correct Host header for the upstream server
            proxy_set_header Host actualfastapi-app.liara.run;

            # Forward real client information
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable SNI and specify the upstream server name explicitly
            proxy_ssl_server_name on;
            proxy_ssl_name actualfastapi-app.liara.run;
        }

        # Django REST API base
        location ^~ /api/ {
            proxy_pass https://fastapi-app.liara.run$request_uri;
            proxy_set_header Host fastapi-app.liara.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_name fastapi-app.liara.run;
        }

         # Forward /admin to Django backend
        location ^~ /admin {
            proxy_pass https://fastapi-app.liara.run$request_uri;
            proxy_set_header Host fastapi-app.liara.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_name fastapi-app.liara.run;
        }

        # Return 404 for all other paths
        location / {
            return 404;
        }
    }
}
